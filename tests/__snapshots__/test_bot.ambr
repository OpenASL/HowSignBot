# name: test_catchphrase
  <class 'dict'> {
    'content': '
      ||bay||
      ||snowman||
      ||Steve Martin||
      ||river rafting||
      ||Spain||
      ||dredge||
      ||earthquake||
      ||wrinkle||
      Enter `!cp` or `!cp [category]` for more.
      Categories: easy, medium, hard, animals, food, travel, people, household
    ',
  }
---
# name: test_catchphrase_categories[Hard]
  <class 'dict'> {
    'content': '
      ||through||
      ||highway||
      ||cardboard||
      ||full moon||
      ||mast||
      ||wool||
      ||blimp||
      ||standard||
      Enter `!cp` or `!cp [category]` for more.
      Categories: easy, medium, hard, animals, food, travel, people, household
    ',
  }
---
# name: test_catchphrase_categories[categories]
  <class 'dict'> {
    'content': '
      easy, medium, hard, animals, food, travel, people, household
      Enter `!cp` or `!cp [category]` to generate a list of words/phrases.
    ',
  }
---
# name: test_catchphrase_categories[food]
  <class 'dict'> {
    'content': '
      ||blanch||
      ||clams||
      ||Kool-aid||
      ||corn on the cob||
      ||pineapple||
      ||yam||
      ||egg salad sandwich||
      ||chocolate cake||
      Enter `!cp` or `!cp [category]` for more.
      Categories: easy, medium, hard, animals, food, travel, people, household
    ',
  }
---
# name: test_clthat[any]
  <class 'dict'> {
    'content': '
      _CL That!_
      https://tenor.com/wJRR.gif
    ',
  }
---
# name: test_clthat[gif]
  <class 'dict'> {
    'content': '
      _CL That!_
      https://tenor.com/LyDa.gif
    ',
  }
---
# name: test_clthat[text]
  <class 'dict'> {
    'content': '
      _CL That!_
      Dog catching a frisbee in the air
    ',
  }
---
# name: test_handshape[open8]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description=Embed.Empty,
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(url='attachment://Open8.png'),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title='Open8',
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
    'file': <class 'File'> {
      filename='Open8.png',
    },
  }
---
# name: test_handshape[open9]
  <class 'dict'> {
    'content': '"open9" not found. Did you mean "OpenX"? Enter `!handshapes` to see a list of handshapes.',
  }
---
# name: test_handshape[random]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description=Embed.Empty,
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(url='attachment://8.png'),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title='8',
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
    'file': <class 'File'> {
      filename='8.png',
    },
  }
---
# name: test_handshapes
  <class 'dict'> {
    'content': '
      1, 3, Bent3, 4, 5, Claw5, 6, 7, 8, Open8, 9, Flat9, A, OpenA, B, BentB, FlatB, OpenB, C, FlatC, SmallC, D, E, G, H, I, K, L, M, OpenM, N, OpenN, O, FlatO, SmallO, R, S, T, V, BentV, X, OpenX, Y, ILY, Corna
      
      Enter `!handshape` to display a random handshape or `!handshape [name]` to display a specific handshape.
  
    ',
  }
---
# name: test_idiom[None]
  <class 'dict'> {
    'content': '
      **Roll With the Punches**
      Meaning: To tolerate or endure through the unexpected mishappenings you may encounter from time to time.
  
    ',
  }
---
# name: test_idiom[||]
  <class 'dict'> {
    'content': '
      ||**Back To the Drawing Board**||
      Meaning: ||Starting over again on a new design from a previously failed attempt.||
  
    ',
  }
---
# name: test_parse_human_readable_datetime[9/25 2:30 pm cdt]
  '2020-09-25T19:30:00+00:00'
---
# name: test_parse_human_readable_datetime[on friday at 2pm cst]
  '2020-09-25T19:00:00+00:00'
---
# name: test_parse_human_readable_datetime[today 2pm edt]
  '2020-09-25T18:00:00+00:00'
---
# name: test_parse_human_readable_datetime[today 8:25pm edt]
  '2020-09-26T00:25:00+00:00'
---
# name: test_parse_human_readable_datetime[today at 2pm edt]
  '2020-09-25T18:00:00+00:00'
---
# name: test_parse_human_readable_datetime[tomorrow 2pm pdt]
  '2020-09-26T21:00:00+00:00'
---
# name: test_practice["classifiers" at 6pm pdt]
  <class 'tuple'> (
    'Friday, September 25 06:00 PM PDT 2020',
    'Steve',
    'classifiers',
  )
---
# name: test_practice["games" 10am edt Sunday]
  <class 'tuple'> (
    'Sunday, September 27 10:00 AM EDT 2020',
    'Steve',
    'games',
  )
---
# name: test_practice["games" at 10am edt on 9/27]
  <class 'tuple'> (
    'Sunday, September 27 10:00 AM EDT 2020',
    'Steve',
    'games',
  )
---
# name: test_practice["games" at 10am edt on Sunday]
  <class 'tuple'> (
    'Sunday, September 27 10:00 AM EDT 2020',
    'Steve',
    'games',
  )
---
# name: test_practice[10am edt "games" on 9/27]
  <class 'tuple'> (
    'Sunday, September 27 10:00 AM EDT 2020',
    'Steve',
    'games',
  )
---
# name: test_practice[2pm edt "chat and games! \U0001f389"]
  <class 'tuple'> (
    'Friday, September 25 02:00 PM EDT 2020',
    'Steve',
    'chat and games! üéâ',
  )
---
# name: test_practice[2pm edt]
  <class 'tuple'> (
    'Friday, September 25 02:00 PM EDT 2020',
    'Steve',
    '',
  )
---
# name: test_practice[9/24 1:45pm edt \u201caround 45 min.-1 hour\u201d]
  <class 'tuple'> (
    'Friday, September 24 01:45 PM EDT 2021',
    'Steve',
    'around 45 min.-1 hour',
  )
---
# name: test_practice[9/27 9am cdt]
  <class 'tuple'> (
    'Sunday, September 27 09:00 AM CDT 2020',
    'Steve',
    '',
  )
---
# name: test_practice[at 2pm edt]
  <class 'tuple'> (
    'Friday, September 25 02:00 PM EDT 2020',
    'Steve',
    '',
  )
---
# name: test_practice[sunday 10:30pm pdt]
  <class 'tuple'> (
    'Sunday, September 27 10:30 PM PDT 2020',
    'Steve',
    '',
  )
---
# name: test_practice[tomorrow 2pm pdt]
  <class 'tuple'> (
    'Saturday, September 26 02:00 PM PDT 2020',
    'Steve',
    '',
  )
---
# name: test_schedule[9/27]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='Sunday, September 27',
      fields=<class 'list'> [
        EmbedProxy(inline=False, name='11 AM PDT / 12 PM MDT / 1 PM CDT / 2 PM EDT', value='[Add to Google Calendar](http://www.google.com/calendar/event?action=TEMPLATE&text=ASL+Practice%3A+another+1%EF%B8%8F%E2%83%A3&dates=20200927T180000Z%2F20200927T190000Z&details=See+the+full+schedule+here%3A+https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fabc%2Fedit)\nNotes: another 1Ô∏è‚É£'),
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_schedule[None]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='Today - Friday, September 25',
      fields=<class 'list'> [
        EmbedProxy(inline=False, name='2 PM PDT / 3 PM MDT / 4 PM CDT / 5 PM EDT', value='[Add to Google Calendar](http://www.google.com/calendar/event?action=TEMPLATE&text=ASL+Practice%3A+recurring&dates=20200925T210000Z%2F20200925T220000Z&details=See+the+full+schedule+here%3A+https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fabc%2Fedit)\nHost: Steve\nNotes: recurring'),
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_schedule[saturday]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='Tomorrow - Saturday, September 26',
      fields=<class 'list'> [
        EmbedProxy(inline=False, name='2 PM PDT / 3 PM MDT / 4 PM CDT / 5 PM EDT', value='[Add to Google Calendar](http://www.google.com/calendar/event?action=TEMPLATE&text=ASL+Practice%3A+one+time&dates=20200926T210000Z%2F20200926T220000Z&details=See+the+full+schedule+here%3A+https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fabc%2Fedit)\nHost: Steve\nNotes: one time'),
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_schedule[today]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='Today - Friday, September 25',
      fields=<class 'list'> [
        EmbedProxy(inline=False, name='2 PM PDT / 3 PM MDT / 4 PM CDT / 5 PM EDT', value='[Add to Google Calendar](http://www.google.com/calendar/event?action=TEMPLATE&text=ASL+Practice%3A+recurring&dates=20200925T210000Z%2F20200925T220000Z&details=See+the+full+schedule+here%3A+https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fabc%2Fedit)\nHost: Steve\nNotes: recurring'),
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_schedule[tomorrow]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='Tomorrow - Saturday, September 26',
      fields=<class 'list'> [
        EmbedProxy(inline=False, name='2 PM PDT / 3 PM MDT / 4 PM CDT / 5 PM EDT', value='[Add to Google Calendar](http://www.google.com/calendar/event?action=TEMPLATE&text=ASL+Practice%3A+one+time&dates=20200926T210000Z%2F20200926T220000Z&details=See+the+full+schedule+here%3A+https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fabc%2Fedit)\nHost: Steve\nNotes: one time'),
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_schedule_on_a_holiday
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=<Colour value=15105570>,
      colour=<Colour value=15105570>,
      description='
        Today - Thursday, November 26 ü¶É
        
        *There are no scheduled practices yet!*
        
        To schedule a practice, edit the schedule below or use the `!practice` command.
        Example: `!practice today 2pm pst`
  
      ',
      fields=<class 'list'> [
        EmbedProxy(inline=True, name='üóì', value='[Schedule or edit a practice](https://docs.google.com/spreadsheets/d/abc/edit)'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sentence[None]
  <class 'dict'> {
    'content': 'The father died during childbirth.',
  }
---
# name: test_sentence[||]
  <class 'dict'> {
    'content': '||Lightning Paradise was the local hangout joint where the group usually ended up spending the night.||',
  }
---
# name: test_sign[need, ask]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description=Embed.Empty,
      fields=<class 'list'> [
        EmbedProxy(inline=True, name='NEED', value='[üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+need)\n[üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+need)\n[ü§ù **SigningSavvy** - Sign for NEED](https://www.signingsavvy.com/search/need)\n[üåê **Spread The Sign** - NEED](https://www.spreadthesign.com/en.us/search/?q=need)\n[üìπ **YouGlish** - ASL videos with NEED](https://youglish.com/pronounce/need/signlanguage/asl)\n'),
        EmbedProxy(inline=True, name='ASK', value='[üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+ask)\n[üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+ask)\n[ü§ù **SigningSavvy** - Sign for ASK](https://www.signingsavvy.com/search/ask)\n[üåê **Spread The Sign** - ASK](https://www.spreadthesign.com/en.us/search/?q=ask)\n[üìπ **YouGlish** - ASL videos with ASK](https://youglish.com/pronounce/ask/signlanguage/asl)\n'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sign[tiger]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description='
        [üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+tiger)
        [üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+tiger)
        [ü§ù **SigningSavvy** - Sign for TIGER](https://www.signingsavvy.com/search/tiger)
        [üåê **Spread The Sign** - TIGER](https://www.spreadthesign.com/en.us/search/?q=tiger)
        [üìπ **YouGlish** - ASL videos with TIGER](https://youglish.com/pronounce/tiger/signlanguage/asl)
  
      ',
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title='TIGER',
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sign[what's up]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description='
        [üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+what%27s+up)
        [üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+what%27s+up)
        [ü§ù **SigningSavvy** - Sign for WHAT'S UP](https://www.signingsavvy.com/search/what%27s+up)
        [üåê **Spread The Sign** - WHAT'S UP](https://www.spreadthesign.com/en.us/search/?q=what%27s+up)
        [üìπ **YouGlish** - ASL videos with WHAT'S UP](https://youglish.com/pronounce/what%27s+up/signlanguage/asl)
  
      ',
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title="WHAT'S UP",
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sign[||need, ask||]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description=Embed.Empty,
      fields=<class 'list'> [
        EmbedProxy(inline=True, name='||NEED||', value='[üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+need)\n[üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+need)\n[ü§ù **SigningSavvy** - Sign for ||NEED||](https://www.signingsavvy.com/search/need)\n[üåê **Spread The Sign** - ||NEED||](https://www.spreadthesign.com/en.us/search/?q=need)\n[üìπ **YouGlish** - ASL videos with ||NEED||](https://youglish.com/pronounce/need/signlanguage/asl)\n'),
        EmbedProxy(inline=True, name='||ASK||', value='[üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+ask)\n[üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+ask)\n[ü§ù **SigningSavvy** - Sign for ||ASK||](https://www.signingsavvy.com/search/ask)\n[üåê **Spread The Sign** - ||ASK||](https://www.spreadthesign.com/en.us/search/?q=ask)\n[üìπ **YouGlish** - ASL videos with ||ASK||](https://youglish.com/pronounce/ask/signlanguage/asl)\n'),
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title=Embed.Empty,
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sign[||tiger||]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description='
        [üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+tiger)
        [üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+tiger)
        [ü§ù **SigningSavvy** - Sign for ||TIGER||](https://www.signingsavvy.com/search/tiger)
        [üåê **Spread The Sign** - ||TIGER||](https://www.spreadthesign.com/en.us/search/?q=tiger)
        [üìπ **YouGlish** - ASL videos with ||TIGER||](https://youglish.com/pronounce/tiger/signlanguage/asl)
  
      ',
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title='||TIGER||',
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
# name: test_sign[||what's up||]
  <class 'dict'> {
    'embed': <class 'Embed'> {
      Empty=Embed.Empty,
      author=EmbedProxy(),
      color=Embed.Empty,
      colour=Embed.Empty,
      description='
        [üëã **Handspeak** - Search results](https://www.google.com/search?&q=site%3Ahandspeak.com+what%27s+up)
        [üß¨ **Lifeprint** - Search results](https://www.google.com/search?&q=site%3Alifeprint.com+what%27s+up)
        [ü§ù **SigningSavvy** - Sign for ||WHAT'S UP||](https://www.signingsavvy.com/search/what%27s+up)
        [üåê **Spread The Sign** - ||WHAT'S UP||](https://www.spreadthesign.com/en.us/search/?q=what%27s+up)
        [üìπ **YouGlish** - ASL videos with ||WHAT'S UP||](https://youglish.com/pronounce/what%27s+up/signlanguage/asl)
  
      ',
      fields=<class 'list'> [
      ],
      footer=EmbedProxy(),
      image=EmbedProxy(),
      provider=EmbedProxy(),
      thumbnail=EmbedProxy(),
      timestamp=Embed.Empty,
      title="||WHAT'S UP||",
      type='rich',
      url=Embed.Empty,
      video=EmbedProxy(),
    },
  }
---
